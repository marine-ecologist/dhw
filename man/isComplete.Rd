% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isComplete.R
\name{isComplete}
\alias{isComplete}
\title{Check completeness of dated NetCDF files by filename}
\usage{
isComplete(
  paths,
  recurse = TRUE,
  date_regex = "(?<!\\\\d)(\\\\d{8})(?!\\\\d)",
  cadence_days = NULL,
  expected_start = NULL,
  expected_end = NULL,
  treat_duplicates_as_incomplete = FALSE
)
}
\arguments{
\item{paths}{Character vector of directories to search.}

\item{recurse}{Logical; search subdirectories recursively. Default \code{TRUE}.}

\item{date_regex}{Character regex used to extract an 8-digit date (\code{YYYYMMDD});
the last match per filename is taken. Default \code{"(?<!\\d)(\\d{8})(?!\\d)"}.}

\item{cadence_days}{Integer; expected step in days between consecutive dates,
e.g., \code{1} (daily), \code{7} (weekly), \code{30} (monthly-ish). If \code{NULL}
(default), cadence is inferred from the modal gap in observed dates.}

\item{expected_start, expected_end}{Optional inclusive bounds (coerced to \code{Date})
to clip files before completeness checking.}

\item{treat_duplicates_as_incomplete}{Logical; if \code{TRUE}, any date with
multiple files will cause \code{FALSE} to be returned. Default \code{FALSE}.}
}
\value{
Logical scalar. \code{TRUE} if no missing dates (and, if requested,
no duplicates) within the audited range; otherwise \code{FALSE}.
The full audit is attached as attribute \code{"audit"} with elements:
\itemize{
\item \code{files} — tibble of files and parsed dates
\item \code{summary} — tibble with coverage and counts
\item \code{missing_dates} — tibble of missing \code{Date}s
\item \code{duplicates} — tibble of duplicate dates with counts
}
}
\description{
Scans one or more folders for \code{.nc} files (OISST and CoralTemp), extracts the last \code{YYYYMMDD}
token from each filename, parses to \code{Date}, and evaluates completeness
against a user-specified cadence. See download_CoralTemp and download_OISST for further details.
}
\examples{
\dontrun{
ok <- isComplete(
  paths = c("/data/crw/CRW_SST", "/data/crw/CRW_DHW"),
  cadence_days = 1,                         # daily
  expected_start = "1985-06-01",
  expected_end   = "2025-06-30",
  treat_duplicates_as_incomplete = TRUE
)
attr(ok, "audit")$summary
attr(ok, "audit")$missing_dates
}

}
