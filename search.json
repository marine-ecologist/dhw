[{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://marine-ecologist.github.io/dhw/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://marine-ecologist.github.io/dhw/articles/calculating_climatologies.html","id":"create-climatologies","dir":"Articles","previous_headings":"","what":"Create Climatologies:","title":"Calculating Degree Heating Weeks","text":"main function create_climatology(``) takes input terra::rast() SST file. Included example subset NOAA CoralTemp Lizard Island (145.4, -14.7): create climatologies, use create_climatology: outputs list seven rasters, including sst (original input data), monthly maximum, mean monthly maximum, daily climatology, anomalies, hotspots, degree heating weeks:","code":"library(dhw) #>  library(dhw) dev v0.0.2.9000   library(terra) #> terra 1.8.5   library(ggplot2) #> Error in get(paste0(generic, \".\", class), envir = get_method_env()) :  #>   object 'type_sum.accel' not found   library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ lubridate 1.9.4     ✔ tibble    3.2.1 #> ✔ purrr     1.0.2     ✔ tidyr     1.3.1 #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ tidyr::extract() masks terra::extract() #> ✖ dplyr::filter()  masks stats::filter() #> ✖ dplyr::lag()     masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors    lizard_crw <- rast(system.file(\"extdata\", \"lizard_crw.tif\", package=\"dhw\"))      lizard_crw #> class       : SpatRaster  #> dimensions  : 1, 1, 14228  (nrow, ncol, nlyr) #> resolution  : 0.05, 0.05  (x, y) #> extent      : 145.4, 145.45, -14.7, -14.65  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source      : lizard_crw.tif  #> names       :     analy~sst_1,     analy~sst_2,     analy~sst_3,     analy~sst_4,     analy~sst_5,     analy~sst_6, ...  #> min values  :           24.89,            25.2,           25.36,           25.27,           25.28,           24.75, ...  #> max values  :           24.89,            25.2,           25.36,           25.27,           25.28,           24.75, ...  #> unit        : degrees_Celsius, degrees_Celsius, degrees_Celsius, degrees_Celsius, degrees_Celsius, degrees_Celsius, ...  #> time        : 1985-06-01 12:00:00 to 2024-05-15 12:00:00 UTC lizard_climatology <- create_climatology(lizard_crw) #> --- create_climatology --- #> 5.2e-06 secs  -  Processing Monthly Mean Climatology  #> 2.2 secs  -  Processing Daily Climatology  #> 2.4 secs  -  Processing SST Anomalies  #> 2.9 secs  -  Processing HotSpots (HS)  #> 3.3 secs  -  Processing Degree Heating Weeks (DHW)  #> 3.6 secs  -  Combining outputs str(lizard_climatology) #> List of 7 #>  $ sst        :S4 class 'SpatRaster' [package \"terra\"] #>  $ mm         :S4 class 'SpatRaster' [package \"terra\"] #>  $ mmm        :S4 class 'SpatRaster' [package \"terra\"] #>  $ climatology:S4 class 'SpatRaster' [package \"terra\"] #>  $ anomaly    :S4 class 'SpatRaster' [package \"terra\"] #>  $ hotspots   :S4 class 'SpatRaster' [package \"terra\"] #>  $ dhw        :S4 class 'SpatRaster' [package \"terra\"]"},{"path":"https://marine-ecologist.github.io/dhw/articles/calculating_climatologies.html","id":"details","dir":"Articles","previous_headings":"","what":"Details:","title":"Calculating Degree Heating Weeks","text":"create_climatology() wrapper around following functions: calculate_monthly_mean() calculate_maximum_monthly_mean() calculate_daily_climatology() calculate_hotspots() calculate_dhw()","code":""},{"path":"https://marine-ecologist.github.io/dhw/articles/calculating_climatologies.html","id":"calculate-monthly-mean","dir":"Articles","previous_headings":"Details:","what":"calculate monthly mean","title":"Calculating Degree Heating Weeks","text":"calculate_monthly_mean() function takes input raster SST file (example lizard_crw timeseries ) returns monthly means: mm-Jan mm-Dec. Following methodology Skirving et al (2020): monthly mean (MM) climatology set 12 SST values represent average SST month calculated period 1985 2012, adjusted 1988.2857 (average years used original climatology, .e., 1985–1990 1993). achieve , daily SST values month averaged produce 12 mean SST values 28 years 1985 2012. least squares linear regression applied month, e.g., 28 values Januaries (Y-values) regressed years (X-values), SST value corresponding X= 1988.2857 assigned MM value January 0.05 × 0.05 degree pixel separately. repeated month pixel set 12 MM values, representing MM climatology. method maintained similar MM value original climatology increasing number years contributed climatology. done order provide consistency interpretation throughout various versions heat stress products function calculates monthly mean climatology (MM) given sea surface temperature (SST) dataset specified baseline period (1985–2012). first extracts time dimension input sst_file filters data include years 1985–2012. month (January December), subsets SST data corresponding month applies linear regression estimate SST value adjusted year 1988.2857 (average baseline years). done predicting SST value 1988.2857 using regression model. function outputs terra::rast object containing 12 layers, one month’s climatological mean SST, appropriate names metadata assigned layers.","code":"lizard_crw_mm <- calculate_monthly_mean(sst_file = lizard_crw)  lizard_crw_mm #> class       : SpatRaster  #> dimensions  : 1, 1, 12  (nrow, ncol, nlyr) #> resolution  : 0.05, 0.05  (x, y) #> extent      : 145.4, 145.45, -14.7, -14.65  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varnames    : mm-Jan  #>               mm-Feb  #>               mm-Mar  #>               ... #> names       :   mm-Jan,   mm-Feb,   mm-Mar,   mm-Apr,   mm-May,   mm-Jun, ...  #> min values  : 28.50679, 28.65061, 28.01818, 27.12108, 25.83351, 24.45509, ...  #> max values  : 28.50679, 28.65061, 28.01818, 27.12108, 25.83351, 24.45509, ..."},{"path":"https://marine-ecologist.github.io/dhw/articles/calculating_climatologies.html","id":"calculate-maximum-monthly-mean","dir":"Articles","previous_headings":"Details:","what":"calculate maximum monthly mean","title":"Calculating Degree Heating Weeks","text":"calculate_maximum_monthly_mean() function takes output monthly means returns single value, maximum monthly mean. Following Skirving et al (2020): Maximum Monthly Mean (MMM) climatology maximum 12 MM values satellite pixel.","code":"lizard_crw_mmm <- calculate_maximum_monthly_mean(mm = lizard_crw_mm)  lizard_crw_mmm #> class       : SpatRaster  #> dimensions  : 1, 1, 1  (nrow, ncol, nlyr) #> resolution  : 0.05, 0.05  (x, y) #> extent      : 145.4, 145.45, -14.7, -14.65  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : mmm_anom  #> name        :    lyr.1  #> min value   : 28.65061  #> max value   : 28.65061"},{"path":"https://marine-ecologist.github.io/dhw/articles/calculating_climatologies.html","id":"calculate-daily-climatology","dir":"Articles","previous_headings":"Details:","what":"calculate daily climatology","title":"Calculating Degree Heating Weeks","text":"calculate_daily_climatology() function takes input raster SST file terra::rast() format. Following Skirving et al (2020): daily climatologies (DC) derived MM via linear interpolation. achieve , MM value assigned 15th day corresponding month, individual days dates derived using linear interpolation.  function generates daily SST climatology provided monthly mean climatology (mm) SST dataset (sst_file). first ensures time dimension sst_file Date format extracts start end dates. Monthly time values generated, monthly climatology repeated across time range assigned 15th day month. Using zoo::na.approx, function interpolates monthly climatology daily resolution, aligning exact daily dates sst_file. result terra::rast object daily climatology values, named time-aligned input SST dataset.","code":"lizard_crw_climatology <- calculate_daily_climatology(sst_file = lizard_crw, mm = lizard_crw_mm)  lizard_crw_climatology #> class       : SpatRaster  #> dimensions  : 1, 1, 14228  (nrow, ncol, nlyr) #> resolution  : 0.05, 0.05  (x, y) #> extent      : 145.4, 145.45, -14.7, -14.65  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : Daily SST climatology  #> names       : 1985-06-01, 1985-06-02, 1985-06-03, 1985-06-04, 1985-06-05, 1985-06-06, ...  #> min values  :   24.45509,   24.45509,   24.45509,   24.45509,   24.45509,   24.45509, ...  #> max values  :   24.45509,   24.45509,   24.45509,   24.45509,   24.45509,   24.45509, ...  #> time (days) : 1985-06-01 to 2024-05-15  lizard_crw_climatology |> as.data.frame(xy=TRUE, wide=FALSE, time=TRUE) |> rename(dc=values) |>  ggplot() + theme_bw() +    geom_line(aes(time, dc))"},{"path":"https://marine-ecologist.github.io/dhw/articles/calculating_climatologies.html","id":"calculate-anomalies","dir":"Articles","previous_headings":"Details:","what":"calculate anomalies","title":"Calculating Degree Heating Weeks","text":"calculate_anomalies() function takes sst file daily climatologies calculates SST anomalies relative baseline period. Following methodology Skirving et al 2020: daily SST Anomaly product requires daily climatology calculating daily SST anomalies. daily SST Anomaly product calculated using \\[ \\text{SST Anomaly}_i = \\text{SST}_i - \\text{DC}_d \\] day anomaly d day number corresponding function subtracts daily climatologies input sst_file give daily anomalies.","code":"lizard_crw_anomalies <- calculate_anomalies(sst_file = lizard_crw, climatology = lizard_crw_climatology)  lizard_crw_anomalies #> class       : SpatRaster  #> dimensions  : 1, 1, 14228  (nrow, ncol, nlyr) #> resolution  : 0.05, 0.05  (x, y) #> extent      : 145.4, 145.45, -14.7, -14.65  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : SST Anomalies  #> names       : 1985-06-01, 1985-06-02, 1985-06-03, 1985-06-04, 1985-06-05, 1985-06-06, ...  #> min values  :  0.4349068,  0.7449082,  0.9049081,  0.8149079,  0.8249081,  0.2949074, ...  #> max values  :  0.4349068,  0.7449082,  0.9049081,  0.8149079,  0.8249081,  0.2949074, ...  #> time (days) : 1985-06-01 to 2024-05-15"},{"path":"https://marine-ecologist.github.io/dhw/articles/calculating_climatologies.html","id":"calculate-hotspots","dir":"Articles","previous_headings":"Details:","what":"calculate hotspots","title":"Calculating Degree Heating Weeks","text":"calculate_hotspots() function takes mean monthly maximum function initial SST dataset calculates daily hotspots. Following Skirving et al (2020): HS calculated diﬀerence day’s SST MMM: \\[ \\text HS_i = SST_i - MMM, \\quad HS_i \\geq 0 \\] Note one value MMM single pixel, whereas HS corresponding SST vary daily basis. HS always zero positive, calculation results negative HS, set zero. function computes Coral Bleaching HotSpots (HS) based difference sea surface temperature (SST) data (sst_file) Maximum Monthly Mean (MMM) climatology (mmm). begins calculating anomaly (anomaly_mmm), difference SST MMM. anomalies transformed two hotspot rasters: hotspots_unset, values 0 set 0, hotspots, values 1 set 0, reflecting threshold meaningful heat stress. function ensures time metadata proper variable names assigned resulting rasters, final raster (hotspots) returned, containing daily hotspot values SST data aligned MMM climatology.","code":"lizard_crw_hotspots <- calculate_hotspots(mmm = lizard_crw_mmm, sst_file = lizard_crw)  lizard_crw_hotspots #> class       : SpatRaster  #> dimensions  : 1, 1, 14228  (nrow, ncol, nlyr) #> resolution  : 0.05, 0.05  (x, y) #> extent      : 145.4, 145.45, -14.7, -14.65  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : Hotspots  #> names       : 1985-06-01, 1985-06-02, 1985-06-03, 1985-06-04, 1985-06-05, 1985-06-06, ...  #> min values  :          0,          0,          0,          0,          0,          0, ...  #> max values  :          0,          0,          0,          0,          0,          0, ...  #> time (days) : 1985-06-01 to 2024-05-15"},{"path":"https://marine-ecologist.github.io/dhw/articles/calculating_climatologies.html","id":"calculate-degree-heating-weeks","dir":"Articles","previous_headings":"Details:","what":"calculate degree heating weeks","title":"Calculating Degree Heating Weeks","text":"calculate_dhw() function takes hotspots specified window (default 84 days, 12 weeks). Following Skirving et al (2020): DHW daily summation, 12-week (84 days) running window, HS values 1 , expressed degrees Celsius weeks (◦C weeks), since development coral bleaching usually order weeks. daily HS value, included summation, divided seven prior added total, \\[ \\text{DHW}_i = \\sum_{n = -83}^{} \\left( \\frac{\\text{HS}_n}{7} \\right), \\quad \\text{} \\text{HS}_n \\geq 1 \\] example, 12-week window ending June 1, 2014 (= 1 June 2014), included four daily Coral Bleaching HotSpot values zero, 1.0, 2.0, 0.8 1.2◦C, , since 0.8◦C less 1◦C, included DHW summation accumulated heat stress period. However, 1.0, 2.0, 1.2◦C divided seven, summed. resulting DHW value 1 June 2014 (DHW1 June 2014) 0.6◦C weeks. function computes Degree Heating Weeks (DHW) metric, accumulates heat stress specified rolling window (defaulting 84 days). function operates applying rolling sum input hotspots raster data. pixel, daily hotspot values greater equal 1, summed rolling window divided 7 calculate weekly averages using zoo::rollapply. function returns raster object calculated DHW values, represent accumulated heat stress.","code":"lizard_crw_dhw <- calculate_dhw(hotspots = lizard_crw_hotspots)  lizard_crw_dhw #> class       : SpatRaster  #> dimensions  : 1, 1, 14228  (nrow, ncol, nlyr) #> resolution  : 0.05, 0.05  (x, y) #> extent      : 145.4, 145.45, -14.7, -14.65  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : Degree Heating Weeks  #> names       : 1985-06-01, 1985-06-02, 1985-06-03, 1985-06-04, 1985-06-05, 1985-06-06, ...  #> min values  :        NaN,        NaN,        NaN,        NaN,        NaN,        NaN, ...  #> max values  :        NaN,        NaN,        NaN,        NaN,        NaN,        NaN, ...  #> time (days) : 1985-06-01 to 2024-05-15"},{"path":"https://marine-ecologist.github.io/dhw/articles/extracting_data.html","id":"extract-gbr-spatial-data","dir":"Articles","previous_headings":"","what":"Extract GBR spatial data","title":"Extracting SST and spatial data","text":"Use function download GBR Reefs dataset via eAtlas. Several versions GBRMPA shp file exist, version eAtlas include Torres Straits: dataset consists shapefile reefs, islands, sand banks, cays rocks whole Great Barrier Reef (GBR) including Torres Strait. dataset extension mapping GBR Marine Park include Torres Strait. Torres Strait region mapped scale 1:50,000 (Lawrey, E. P., Stewart M., 2016) new features referred “Torres Strait Reef Island Features” dataset. Complete GBR Reef Island Features dataset integrates “Torres Strait Reef Island Features” dataset existing “GBR Features” (Great Barrier Reef Marine Park Authority, 2007) create single composite dataset whole Great Barrier Reef. metadata see : Complete Great Barrier Reef (GBR) Island Reef Feature boundaries including Torres Strait Version 1b (NESP TWQ 3.13, AIMS, TSRA, GBRMPA) Either combined Set boundary mask raster data buffering 1km concave hull surrounding GBR Reefs:","code":"#gbr_reefs <- download_gbr_spatial(return=\"combined\") gbr_reefs <- download_gbr_spatial(return=\"base\") #> Downloading spatial data... #> Reading and transforming shapefile...  gbr_reefs #> Simple feature collection with 9612 features and 35 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 138.0012 ymin: -29.17855 xmax: 153.5516 ymax: -8.679173 #> Geodetic CRS:  GDA94 #> First 10 features: #>    TARGET_FID     DATASET               LOC_NAME_S      GBR_NAME CHART_NAME #> 1           1 TS Features  U/N Sand Bank (09-347a) U/N Sand Bank       <NA> #> 2           2 TS Features   U/N Sand Bank (09-347) U/N Sand Bank       <NA> #> 3           3 TS Features  U/N Sand Bank (09-355z) U/N Sand Bank       <NA> #> 4           4 TS Features U/N Sand Bank (09-355a0) U/N Sand Bank       <NA> #> 5           5 TS Features U/N Sand Bank (09-355a1) U/N Sand Bank       <NA> #> 6           6 TS Features  U/N Sand Bank (09-355v) U/N Sand Bank       <NA> #> 7           7 TS Features  U/N Sand Bank (09-355x) U/N Sand Bank       <NA> #> 8           8 TS Features  U/N Sand Bank (09-355y) U/N Sand Bank       <NA> #> 9           9 TS Features  U/N Sand Bank (09-355w) U/N Sand Bank       <NA> #> 10         10 TS Features   U/N Sand Bank (09-373) U/N Sand Bank       <NA> #>    TRAD_NAME UN_FEATURE LABEL_ID SORT_GBR_I FEAT_NAME LEVEL_1   LEVEL_2 #> 1       <NA>       TRUE  09-347a       9347      Bank    Bank Sand Bank #> 2       <NA>       TRUE   09-347       9347      Bank    Bank Sand Bank #> 3       <NA>       TRUE  09-355z       9355      Bank    Bank Sand Bank #> 4       <NA>       TRUE 09-355a0       9355      Bank    Bank Sand Bank #> 5       <NA>       TRUE 09-355a1       9355      Bank    Bank Sand Bank #> 6       <NA>       TRUE  09-355v       9355      Bank    Bank Sand Bank #> 7       <NA>       TRUE  09-355x       9355      Bank    Bank Sand Bank #> 8       <NA>       TRUE  09-355y       9355      Bank    Bank Sand Bank #> 9       <NA>       TRUE  09-355w       9355      Bank    Bank Sand Bank #> 10      <NA>       TRUE   09-373       9373      Bank    Bank Sand Bank #>      LEVEL_3 CLASS_CONF CLASS_SRC POLY_ORIG IMG_SRC SUB_NO           CODE #> 1  Sand Bank       High   Landsat       New Landsat    101 09-347-110-101 #> 2  Sand Bank       High   Landsat       New Landsat    100 09-347-110-100 #> 3  Sand Bank       High   Landsat       New Landsat    126 09-355-110-126 #> 4  Sand Bank       High   Landsat       New Landsat    127 09-355-110-127 #> 5  Sand Bank       High   Landsat       New Landsat    128 09-355-110-128 #> 6  Sand Bank       High   Landsat       New Landsat    122 09-355-110-122 #> 7  Sand Bank       High   Landsat       New Landsat    124 09-355-110-124 #> 8  Sand Bank       High   Landsat       New Landsat    125 09-355-110-125 #> 9  Sand Bank       High   Landsat       New Landsat    123 09-355-110-123 #> 10 Sand Bank       High   Landsat       New Landsat    100 09-373-110-100 #>    FEATURE_C      QLD_NAME X_LABEL GBR_ID LOC_NAME_L  X_COORD   Y_COORD #> 1        110 U/N Sand Bank    <NA>   <NA>       <NA> 143.0781 -9.270715 #> 2        110 U/N Sand Bank    <NA>   <NA>       <NA> 143.0429 -9.293290 #> 3        110 U/N Sand Bank    <NA>   <NA>       <NA> 143.1020 -9.388480 #> 4        110 U/N Sand Bank    <NA>   <NA>       <NA> 143.0973 -9.388562 #> 5        110 U/N Sand Bank    <NA>   <NA>       <NA> 143.0940 -9.390258 #> 6        110 U/N Sand Bank    <NA>   <NA>       <NA> 143.1209 -9.386653 #> 7        110 U/N Sand Bank    <NA>   <NA>       <NA> 143.0837 -9.393855 #> 8        110 U/N Sand Bank    <NA>   <NA>       <NA> 143.1636 -9.405083 #> 9        110 U/N Sand Bank    <NA>   <NA>       <NA> 143.0506 -9.404345 #> 10       110 U/N Sand Bank    <NA>   <NA>       <NA> 142.9252 -9.756551 #>    SHAPE_AREA  SHAPE_LEN Checked RegionID LatitudeID GroupID PriorityLb #> 1  0.78616854 10.4794306   FALSE       13          9     347      FALSE #> 2  2.95336187 17.8452808   FALSE       13          9     347       TRUE #> 3  0.17314345  2.0730203   FALSE       13          9     355      FALSE #> 4  0.05753826  1.0656155   FALSE       13          9     355      FALSE #> 5  0.03254316  0.7397521   FALSE       13          9     355      FALSE #> 6  3.57375838 16.4615152   FALSE       13          9     355      FALSE #> 7  0.88188514  7.8675980   FALSE       13          9     355      FALSE #> 8  0.32171390  2.9717605   FALSE       13          9     355      FALSE #> 9  1.52979291 14.3151950   FALSE       13          9     355      FALSE #> 10 1.65930929  9.6393642   FALSE       14          9     373       TRUE #>             Country   UNIQUE_ID                       geometry #> 1  Papua-New Guinea 09347110101 POLYGON ((143.0851 -9.26657... #> 2  Papua-New Guinea 09347110100 POLYGON ((143.0549 -9.29339... #> 3  Papua-New Guinea 09355110126 POLYGON ((143.1056 -9.3908,... #> 4  Papua-New Guinea 09355110127 POLYGON ((143.0985 -9.39007... #> 5  Papua-New Guinea 09355110128 POLYGON ((143.0939 -9.39146... #> 6  Papua-New Guinea 09355110122 POLYGON ((143.1298 -9.36866... #> 7  Papua-New Guinea 09355110124 POLYGON ((143.0905 -9.38934... #> 8  Papua-New Guinea 09355110125 POLYGON ((143.1675 -9.40401... #> 9  Papua-New Guinea 09355110123 POLYGON ((143.0739 -9.39021... #> 10        Australia 09373110100 POLYGON ((142.9353 -9.77388... gbr_reefs_border <- gbr_reefs |>    st_make_valid() |>    dplyr::filter(FEAT_NAME %in% c(\"Reef\", \"Terrestrial Reef\"))   gbr_reefs_hull <- gbr_reefs_border |>    concaveman::concaveman() |>    st_make_valid()  gbr_reefs_hull_buffered <- gbr_reefs_hull |>    st_buffer(1000)   ggplot() + theme_bw() +   geom_sf(data=gbr_reefs_hull_buffered,  fill=\"turquoise3\") +   geom_sf(data=gbr_reefs_hull, fill=\"lightblue\") +   geom_sf(data=gbr_reefs_border, fill=\"black\")"},{"path":"https://marine-ecologist.github.io/dhw/articles/extracting_data.html","id":"downloading-and-extracting-sst-data","dir":"Articles","previous_headings":"","what":"Downloading and extracting SST data","title":"Extracting SST and spatial data","text":"NOAA provide many options downloading SST data. ERDAPP via rerdapp library useful smaller requests, (experience) downloading long-time series large spatial extents data can result signficant timeouts. three helper functions directly download CRW, OISST, ERA5 datasets global scales:","code":""},{"path":"https://marine-ecologist.github.io/dhw/articles/extracting_data.html","id":"extract-noaa-coraltemp-spatial-data","dir":"Articles","previous_headings":"Downloading and extracting SST data","what":"Extract NOAA CoralTemp spatial data","title":"Extracting SST and spatial data","text":"download_CoralTemp() pulls global data ncei https follows: full global dataset four variables (sst, ssta, hs, dhw) 520.78GB individual ~10-11MB .nc files. Alternatively, cdo offers much faster workflow using cdo mergetime *.nc outfile cropped GBR extent usingremapbil,target_grid_file.nc input.nc regridded_output.nc (note: CDO directly support cropping irregular polygons, remapbil sets extent (bbox).","code":"download_CoralTemp(url = \"https://www.ncei.noaa.gov/thredds-ocean/fileServer/crw/5km/v3.1/nc/v1.0/daily/\",                    start_date = \"2024-01-01\",                    end_date = \"2024-12-31\",                    dest_dir = \"/Volumes/Extreme_SSD/dhw/CRW/2024/\",                    variable = \"sst\",                    mc.cores = 1)"},{"path":"https://marine-ecologist.github.io/dhw/articles/extracting_data.html","id":"extract-oisst","dir":"Articles","previous_headings":"Downloading and extracting SST data","what":"Extract OISST","title":"Extracting SST and spatial data","text":"download_OISST() pulls global data ncei https follows: full global dataset 26.39GB individual ~10-11MB .nc files. CoralTemp, output rasters can merged time using terra::mosaic(rasters) terra::crop(). Alternatively, cdo offers much faster workflow using cdo mergetime *.nc outfile cropped GBR extent usingremapbil,target_grid_file.nc input.nc regridded_output.nc (note: CDO directly support cropping irregular polygons, remapbil sets extent (bbox).","code":"download_OISST(url = \"https://www.ncei.noaa.gov/data/sea-surface-temperature-optimum-interpolation/v2.1/access/avhrr/\",                start_date = \"2024-01-01\",                end_date = \"2024-12-31\",                dest_dir = \"/Volumes/Extreme_SSD/dhw/OISST/2024/\",                mc.cores = 12) process_OISST <- function(input, output, variable = \"sst\", combinedfilename = NULL) {   # Ensure the output directory exists   dir.create(output, recursive = TRUE, showWarnings = FALSE)         temp_file <- file.path(tempdir(), \"gbr_reefs_shp.gpkg\")    # Check if the file already exists   if (!file.exists(temp_file)) {     # Download and save the GBR reefs spatial data     gbr_reefs_shp <- dhw::download_gbr_spatial(reefs = \"\")     sf::st_write(gbr_reefs_shp, temp_file, overwrite = TRUE, quiet=TRUE)   } else {     # Read the existing file     gbr_reefs_shp <- sf::st_read(temp_file, quiet=TRUE)   }      gbr_reefs_hull_buffered <- gbr_reefs_shp|>      sf::st_make_valid() |>      dplyr::filter(FEAT_NAME %in% c(\"Reef\", \"Terrestrial Reef\")) |>      concaveman::concaveman() |>      sf::st_make_valid() |>      sf::st_buffer(1000)       # List all .nc files recursively   rlist <- list.files(path = input,                        pattern = \"\\\\.nc$\",                        recursive = TRUE,                        full.names = TRUE)      # Initialize list for processed rasters   processed_rasters <- list()      # Process each file   for (file in rlist) {     # Read raster     r <- terra::rast(file)      # Filter to include only 'sst_zlev=0'     r <- r[[\"sst_zlev=0\"]]      # Set variable name and time dimension          names(r) <- terra::time(r)          # Crop raster to GBR region     cropped_r <- terra::crop(r, gbr_reefs_hull_buffered)          # Extract just the filename     filename <- basename(file)          # Create the new output path in the output folder     new_path <- file.path(output, filename)          # Save the cropped raster    # terra::writeRaster(cropped_r, new_path, overwrite = TRUE)          # Add processed raster to list     processed_rasters <- c(processed_rasters, cropped_r)          # Print status     cat(\"Processed:\", new_path, \"\\n\")   }      # Combine all processed rasters into a single file if specified   if (!is.null(combinedfilename)) {          combined_raster <- do.call(c, processed_rasters) # Combine all rasters     terra::writeRaster(combined_raster, combinedfilename, overwrite = TRUE)     cat(\"Combined raster saved to:\", combinedfilename, \"\\n\")   }       }  process_OISST(input = \"/Volumes/Extreme_SSD/dhw/global\",   #            output = \"/Volumes/Extreme_SSD/dhw/gbr\",               combinedfilename = \"/Volumes/Extreme_SSD/dhw/gbr/GBR_OISST_full.nc\",               variable = \"sst\")"},{"path":"https://marine-ecologist.github.io/dhw/articles/extracting_data.html","id":"extract-era5","dir":"Articles","previous_headings":"Downloading and extracting SST data","what":"Extract ERA5","title":"Extracting SST and spatial data","text":"ERA5 doesn’t direct https link far ’m aware. download_ERA5() function uses ecmwfr interface ‘ECMWF’ ‘CDS’ Data Web Services access daily SST data via Copernicus. downloaded, process_ERA5() function combines outputs single rast file.","code":"download_ERA5(     start_year = 2024,     end_year = 2024,     ecmwfr_key = \"381246a1-68c9-4e99-aab2-44c36d6da73d\",     timeout=60,     dest_dir = \"/Volumes/Extreme_SSD/dhw/ERA5/\"   )       tmp <- process_ERA5(folder = \"/Volumes/Extreme_SSD/dhw/ERA5/gbr/\", units = \"celsius\")"},{"path":"https://marine-ecologist.github.io/dhw/articles/validating_climatologies.html","id":"validate-climatologies","dir":"Articles","previous_headings":"","what":"Validate climatologies","title":"Validating DHW climatologies","text":"dhw package created track reproducibility code applying CRW algorithms additional datasets analysis. validate climatology maximum monthly mean take spatial subset NOAA CoralTemp NOAA Daily climatology files single pixel (Lizard Island) spanning 1:","code":"library(dhw) library(terra)  plot_mm(input = unwrap(lizard_OISST_raster), lon = 145.25, lat = -14.5) #> Error in get(paste0(generic, \".\", class), envir = get_method_env()) :  #>   object 'type_sum.accel' not found"},{"path":"https://marine-ecologist.github.io/dhw/articles/validating_climatologies.html","id":"verify-degree-heating-weeks","dir":"Articles","previous_headings":"","what":"Verify Degree Heating Weeks","title":"Validating DHW climatologies","text":"dhw package created track reproducibility code applying CRW algorithms additional datasets. validate create_climatology() functions, take spatial subset NOAA CoralTemp NOAA Daily climatology files single pixel (Lizard Island) spanning 1: (NOAA Climatology available : ct5km_climatology_v3.1.nc - Contains 12 monthly mean SST climatologies deriving CRW’s daily global 5km SST Anomaly product. maximum pixel-based values among 12 monthly mean SST climatologies form Maximum Monthly Mean (MMM) SST climatology, used derive CRW’s daily global 5km coral bleaching heat stress products) CoralTemp data, run create_climatology() generate SST, Daily Climatologies, MM, MMM, SSTA, HS, DHW: Comparing two datasets, June - December mostly match, MM derived create_climatology() Jan-May (slightly) inconsistent NOAA baseline:  AFAIK difference due NOAA calculation Daily Climatologies, based full SST Timeseries (1985-01-01 2012-12-31), CoralTemp available 1985-06-01 2012-12-31. test , can substitute CoralTempDailyClimatology back climatology calculations. First download complete NOAA dataset subset time (2015-2017) variables (sst, ssta, hs, dhw): compare subset, run individual components create_climatology() except replace calculated_mm NOAA CRW CoralTempDailyClimatology amd visualise data: Third, compare calculated climatology values sst, ssta, hs, dhw original downloaded NOAA .nc file validate method:","code":"library(sf) library(terra) library(tidyverse) library(dhw)   grid_point <- data.frame(longitude = 145.405, latitude = -14.655) |>   st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) |>   vect() |>   buffer(width = 0.001)   # CoralTempSST <- rast(\"/Users/rof011/GBR-dhw/datasets/coraltemp/GBR_coraltemp_v3.1_sst.nc\") %>%  #   crop(., grid_point) |>  #   project(\"EPSG:4283\") |>  #   wrap() #  #  # CoralTempDailyClimatology <- rast(\"/Users/rof011/GBR-dhw/datasets/coraltemp/ct5km_climatology_v3.1.nc\") %>%  #   crop(., grid_point) |>  #   tidyterra::select(2:13) |>  #   project(\"EPSG:4283\") |>  #   wrap() #  # usethis::use_data(CoralTempSST) # usethis::use_data(CoralTempDailyClimatology)  CoralTempSST <- unwrap(CoralTempSST) CoralTempDailyClimatology <- unwrap(CoralTempDailyClimatology)  test_SST <- create_climatology(unwrap(CoralTempSST)) #> --- create_climatology --- #> 4.8e-06 secs  -  Processing Monthly Mean Climatology  #> 0.28 secs  -  Processing Daily Climatology  #> 0.41 secs  -  Processing SST Anomalies  #> 0.63 secs  -  Processing HotSpots (HS)  #> 0.85 secs  -  Processing Degree Heating Weeks (DHW)  #> 1.2 secs  -  Combining outputs    test_SST_vals <- terra::values(test_SST$mm) |> as.numeric() |> round(2) CoralTempDailyClimatology_vals <- terra::values(unwrap(CoralTempDailyClimatology)) |> as.numeric() data.frame(month=month.abb,             dhw_library_mm = test_SST_vals,            NOAA_mmm = CoralTempDailyClimatology_vals) |>    ggplot() + theme_bw() +   geom_point(aes(NOAA_mmm, dhw_library_mm, fill=month), stroke=0.5, shape=21, size=2.5, alpha=0.4) +   stat_smooth(aes(NOAA_mmm, dhw_library_mm), method=lm) +   coord_fixed() #> `geom_smooth()` using formula = 'y ~ x' library(rerddap)  NOAA_CRW_a <- griddap(     datasetx = 'NOAA_DHW',     time = c(\"2015-01-01\", \"2018-01-01\"),     latitude = c(-14.655, -14.655),     longitude = c(145.405, 145.405),     #fields = c('CRW_SST', 'CRW_SSTANOMALY', 'CRW_HOTSPOT', 'CRW_DHW'),     fmt = \"csv\"   )  NOAA_CRW_b <- griddap(     datasetx = 'NOAA_DHW',     time = c(\"2018-01-01\", \"2021-01-01\"),     latitude = c(-14.655, -14.655),     longitude = c(145.405, 145.405),     #fields = c('CRW_SST', 'CRW_SSTANOMALY', 'CRW_HOTSPOT', 'CRW_DHW'),     fmt = \"csv\"   )  NOAA_CRW_c <- griddap(     datasetx = 'NOAA_DHW',     time = c(\"2021-01-01\", \"2024-05-15\"),     latitude = c(-14.655, -14.655),     longitude = c(145.405, 145.405),     #fields = c('CRW_SST', 'CRW_SSTANOMALY', 'CRW_HOTSPOT', 'CRW_DHW'),     fmt = \"csv\"   )  NOAA_CRW <- rbind(NOAA_CRW_a, NOAA_CRW_b, NOAA_CRW_c)  #usethis::use_data(NOAA_CRW, overwrite=TRUE) calculated_mm <- calculate_monthly_mean(CoralTempSST) calculated_mmm <- calculate_maximum_monthly_mean(mm = CoralTempDailyClimatology) calculated_dc <- calculate_daily_climatology(sst_file = CoralTempSST, mm = CoralTempDailyClimatology) calculated_anomalies <- calculate_anomalies(sst_file = CoralTempSST, climatology = calculated_dc) calculated_hotspots <- calculate_hotspots(mmm = calculated_mmm, sst_file = CoralTempSST) calculated_dhw <- calculate_dhw(hotspots = calculated_hotspots) calculated_baa <- calculate_baa(hotspots = calculated_hotspots, dhw = calculated_dhw)   # convert to df calculated_sst <- CoralTempSST |> as.data.frame(xy=TRUE, wide=FALSE, time=TRUE) |> rename(calculated_SST=values) |>    filter(time >= as.Date(\"2015-01-01\")) |>  filter(time < as.Date(\"2024-05-15\")) |> select(-x, -y, -layer) calculated_dc <- calculated_dc |> as.data.frame(xy=TRUE, wide=FALSE, time=TRUE) |> rename(calculated_DC=values) |>    filter(time >= as.Date(\"2015-01-01\")) |>  filter(time < as.Date(\"2024-05-15\")) |> select(-x, -y, -layer) calculated_anomalies <- calculated_anomalies |> as.data.frame(xy=TRUE, wide=FALSE, time=TRUE) |> rename(calculated_SSTA=values) |>    filter(time >= as.Date(\"2015-01-01\")) |>  filter(time < as.Date(\"2024-05-15\")) |> select(-x, -y, -layer) calculated_hotspots <- calculated_hotspots |> as.data.frame(xy=TRUE, wide=FALSE, time=TRUE) |> rename(calculated_HS=values) |>    filter(time >= as.Date(\"2015-01-01\")) |>  filter(time < as.Date(\"2024-05-15\")) |> select(-x, -y, -layer) calculated_dhw <- calculated_dhw |> as.data.frame(xy=TRUE, wide=FALSE, time=TRUE) |> rename(calculated_DHW=values) |>    filter(time >= as.Date(\"2015-01-01\")) |>  filter(time < as.Date(\"2024-05-15\")) |> select(-x, -y, -layer) calculated_baa <- calculated_baa |> as.data.frame(xy=TRUE, wide=FALSE, time=TRUE) |> rename(calculated_BAA=values) |>    filter(time >= as.Date(\"2015-01-01\")) |>  filter(time < as.Date(\"2024-05-15\")) |> select(-x, -y, -layer)   daily_climatology_plot <- ggplot() + theme_bw() +    geom_line(data=calculated_sst, aes(time,calculated_SST), color=\"grey\") +   geom_line(data = calculated_dc, aes(time, calculated_DC), color=\"blue\") +   geom_hline(yintercept=terra::values(calculated_mmm) |> as.numeric(), color=\"red\")  +   ylab(\"SST\")  library(patchwork) #>  #> Attaching package: 'patchwork' #> The following object is masked from 'package:terra': #>  #>     area  daily_anomalies_plot <- ggplot() + theme_bw() +    geom_line(data=calculated_anomalies, aes(time, calculated_SSTA, color=calculated_SSTA), show.legend=FALSE) +   scale_color_distiller(palette=\"RdBu\") +   geom_hline(yintercept=0, color=\"black\") +   ylab(\"SST Anomalies\")  daily_hs_plot <- ggplot() + theme_bw() +    geom_line(data = calculated_hotspots, aes(time, calculated_HS, color=calculated_HS), show.legend=FALSE) +   scale_color_distiller(palette=\"Reds\", direction=1) +   ylab(\"Hotspots\")  daily_dhw_plot <- ggplot() + theme_bw() +    geom_line(data=calculated_dhw, aes(time, calculated_DHW, color=calculated_DHW), linewidth=1.5, show.legend=FALSE) +   scale_color_distiller(palette=\"RdYlGn\", direction=-1) +   ylab(\"Degree Heating Weeks\")   daily_baa_plot <- ggplot() + theme_bw() +    geom_line(data=calculated_baa, aes(time, calculated_BAA, color=calculated_BAA), show.legend=FALSE) +   scale_color_distiller(palette=\"RdPu\", direction=1) +   ylab(\"Bleaching Alert Area\")  (daily_climatology_plot / daily_anomalies_plot / daily_hs_plot / daily_dhw_plot / daily_baa_plot) NOAA_data <- NOAA_CRW_data |> dplyr::select(time, CRW_SST, CRW_SSTANOMALY, CRW_HOTSPOT, CRW_DHW, CRW_BAA) |>    mutate(time=as.Date(time)) |>    rename(NOAA_SST = CRW_SST,          NOAA_SSTA = CRW_SSTANOMALY,          NOAA_HS = CRW_HOTSPOT,          NOAA_DHW = CRW_DHW,          NOAA_BAA = CRW_BAA) |>    mutate(NOAA_HS = ifelse(NOAA_HS < 1, 0, NOAA_HS)) #|>    #mutate(NOAA_DHW = ifelse(NOAA_DHW == 0, NA, NOAA_DHW))            # DHW calculated_data <-    left_join(calculated_sst, calculated_anomalies, by = join_by(time)) %>%    left_join(., calculated_hotspots, by = join_by(time)) %>%    left_join(., calculated_dhw, by = join_by(time)) %>%    left_join(., calculated_baa, by = join_by(time)) |>    filter(time %in% NOAA_data$time) |>    select(time, calculated_SST, calculated_SSTA, calculated_HS, calculated_DHW, calculated_BAA)  combined_data <- left_join(calculated_data, NOAA_data, by = join_by(time))   #View(combined_data |> select(time, NOAA_HS, NOAA_DHW, NOAA_BAA, calculated_HS, calculated_DHW, calculated_BAA)  ## reextract mm  mm_comparison <- data.frame(month=month.abb,             calculated_MM = terra::values(calculated_mm) |> as.numeric() |> round(2),            NOAA_MM = terra::values(CoralTempDailyClimatology) |> as.numeric())    ###  calibrated_plot_SST <- ggplot() + theme_bw() +   geom_point(data=combined_data, aes(NOAA_SST, calculated_SST), color=\"indianred1\") +   geom_abline()  calibrated_plot_SSTA <- ggplot() + theme_bw() +   geom_point(data=combined_data, aes(NOAA_SSTA, calculated_SSTA), color=\"khaki3\") +   geom_abline()   calibrated_plot_HS <- ggplot() + theme_bw() +   geom_point(data=combined_data, aes(NOAA_HS, calculated_HS), color=\"turquoise\") +   geom_abline()  calibrated_plot_DHW <- ggplot() + theme_bw() +   geom_point(data=combined_data, aes(NOAA_DHW, calculated_DHW), color=\"lightseagreen\") +   geom_abline()   calibrated_plot_BAA <- ggplot() + theme_bw() +   geom_point(data=combined_data, aes(NOAA_BAA, calculated_BAA), color=\"purple\") +   geom_abline() +   coord_equal()    (calibrated_plot_SST + calibrated_plot_SSTA + calibrated_plot_HS + calibrated_plot_DHW + calibrated_plot_BAA) + plot_layout(nrow=2)"},{"path":"https://marine-ecologist.github.io/dhw/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"George Roff. Author, maintainer.","code":""},{"path":"https://marine-ecologist.github.io/dhw/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Roff G (2025). dhw: Package Calculating Degree Heating Weeks SST Metrics. R package version 0.0.2.9000, https://marine-ecologist.github.io/dhw/.","code":"@Manual{,   title = {dhw: A Package for Calculating Degree Heating Weeks and other SST Metrics},   author = {George Roff},   year = {2025},   note = {R package version 0.0.2.9000},   url = {https://marine-ecologist.github.io/dhw/}, }"},{"path":"https://marine-ecologist.github.io/dhw/index.html","id":"dhw-an-r-package-for-calculating-various-sst-metrics-maximum-monthly-mean-climatology-sst-anomalies-coral-bleaching-hotspots-degree-heating-weeks","dir":"","previous_headings":"","what":"dhw: an R package for calculating various SST metrics (Maximum Monthly Mean Climatology, SST Anomalies, Coral Bleaching HotSpots, Degree Heating Weeks)","title":"dhw package overview","text":"dhw package calculates SST metrics raw SST datasets following methods National Oceanic Atmospheric Administration’s (NOAA) Coral Reef Watch (CRW) Coral Bleaching Heat Stress Product Suite Version 3.1 (see Skirving et al. 2020 product description methods).  NOAA Coral Reef Watch (CRW) daily global 5km satellite coral bleaching  Degree Heating Week (DHW) product shows accumulated heat stress recent 12-week period, ranges 0 20 °C-weeks. DHW directly related timing intensity coral bleaching common metric assessing coral bleaching events (see details).  Due changes datasets used CRW years (see Skirving et al. 2020 details), CoralTemp  degree heating weeks (SST metrics) calculated specific baseline climatology (1985–1990 1993) allow internally consistent anomaly products.  dhw package provides series functions recreate algorithms CRW metrics (Maximum Monthly Mean Climatology, SST Anomalies, Coral Bleaching HotSpots, Degree Heating Weeks) using SST product (e.g., OISST) spans baseline period 1985 1993.  package uses terra package process raster data (potentially) slower R packages (e.g. stars) much slower alternatives (e.g. cdo) large datasets. Updated versions package switch stars spatiotemporal arrays raster data cubes, provide alternative functions cdo speed large datasets.  Also included series functions visualising SST metrics functions reliably download common datasets (e.g. CRW, OISST) via NOAA NCEI thredds server. Please file issues comments suggestions george.roff@csiro.au.","code":""},{"path":"https://marine-ecologist.github.io/dhw/index.html","id":"installation","dir":"","previous_headings":"","what":"dhw package overview","title":"dhw package overview","text":"current development version dhw can installed github:","code":"#install.packages(\"remotes\") devtools::install_github(\"https://github.com/marine-ecologist/dhw\", force=TRUE)"},{"path":"https://marine-ecologist.github.io/dhw/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"dhw package overview","text":"Skirving et al (2020) Remote Sensing 12(3856) doi:10.3390/rs12233856","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/NOAA_CRW_data.html","id":null,"dir":"Reference","previous_headings":"","what":"NOAA_CRW_data — NOAA_CRW_data","title":"NOAA_CRW_data — NOAA_CRW_data","text":"subset NOAA CRW data rerdapp","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/NOAA_CRW_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOAA_CRW_data — NOAA_CRW_data","text":"","code":"NOAA_CRW_data"},{"path":"https://marine-ecologist.github.io/dhw/reference/NOAA_CRW_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NOAA_CRW_data — NOAA_CRW_data","text":"dataframe CRW_SST Sea Surface Temperature) CRW_SSTANOMALY Sea Surface Temperature anomaly) CRW_DHW Degree Heating Weeks","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/NOAA_CRW_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"NOAA_CRW_data — NOAA_CRW_data","text":"library(rerddap) NOAA_CRW <- griddap( datasetx = 'NOAA_DHW', time = c(\"2015-06-01\", \"2017-06-01\"), latitude = c(-14.655, -14.655), longitude = c(145.405, 145.405), fmt = \"nc\" ) NOAA_CRW_data <- NOAA_CRW$data","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/NOAA_CRW_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NOAA_CRW_data — NOAA_CRW_data","text":"","code":"data(NOAA_CRW_data) summary(NOAA_CRW_data) #>    longitude        latitude          time              CRW_BAA       #>  Min.   :145.4   Min.   :-14.68   Length:732         Min.   :0.0000   #>  1st Qu.:145.4   1st Qu.:-14.68   Class :character   1st Qu.:0.0000   #>  Median :145.4   Median :-14.68   Mode  :character   Median :0.0000   #>  Mean   :145.4   Mean   :-14.68                      Mean   :0.4795   #>  3rd Qu.:145.4   3rd Qu.:-14.68                      3rd Qu.:1.0000   #>  Max.   :145.4   Max.   :-14.68                      Max.   :4.0000   #>                                                                       #>  CRW_BAA_7D_MAX   CRW_BAA_7D_MAX_mask  CRW_BAA_mask    CRW_DHW      #>  Min.   :0.0000   Min.   :0           Min.   :0     Min.   :0.000   #>  1st Qu.:0.0000   1st Qu.:0           1st Qu.:0     1st Qu.:0.000   #>  Median :0.0000   Median :0           Median :0     Median :0.000   #>  Mean   :0.6257   Mean   :0           Mean   :0     Mean   :1.947   #>  3rd Qu.:1.0000   3rd Qu.:0           3rd Qu.:0     3rd Qu.:3.950   #>  Max.   :4.0000   Max.   :0           Max.   :0     Max.   :8.990   #>                                                                     #>   CRW_DHW_mask  CRW_HOTSPOT      CRW_HOTSPOT_mask   CRW_SEAICE     CRW_SST      #>  Min.   :0     Min.   :-5.2900   Min.   :0        Min.   : NA   Min.   :23.30   #>  1st Qu.:0     1st Qu.:-3.1100   1st Qu.:0        1st Qu.: NA   1st Qu.:25.48   #>  Median :0     Median :-1.4300   Median :0        Median : NA   Median :27.16   #>  Mean   :0     Mean   :-1.4099   Mean   :0        Mean   :NaN   Mean   :27.18   #>  3rd Qu.:0     3rd Qu.: 0.2625   3rd Qu.:0        3rd Qu.: NA   3rd Qu.:28.85   #>  Max.   :0     Max.   : 2.0600   Max.   :0        Max.   : NA   Max.   :30.65   #>                                                   NA's   :732                   #>  CRW_SSTANOMALY    CRW_SSTANOMALY_mask #>  Min.   :-0.9800   Min.   :0           #>  1st Qu.: 0.4100   1st Qu.:0           #>  Median : 0.8500   Median :0           #>  Mean   : 0.9107   Mean   :0           #>  3rd Qu.: 1.4700   3rd Qu.:0           #>  Max.   : 2.7700   Max.   :0           #>"},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_anomalies.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate anomalies — calculate_anomalies","title":"Calculate anomalies — calculate_anomalies","text":"Function calculate anomalies See vignette details","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_anomalies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate anomalies — calculate_anomalies","text":"","code":"calculate_anomalies(sst_file, climatology)"},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_anomalies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate anomalies — calculate_anomalies","text":"sst_file sst file climatology daily climatology","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_anomalies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate anomalies — calculate_anomalies","text":"SST anomalies (terra::rast format)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_baa.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate BAA — calculate_baa","title":"Calculate BAA — calculate_baa","text":"Function calculate bleaching alert area (BAA) BAA  outlines current locations, coverage, potential risk level coral bleaching heat stress around world. heat stress level individual Bleaching Alert Area single-day products 5km satellite data grid, day, based SST day. coral bleaching heat stress levels defined table (updated December 2023): Stress                 —   HotSpot <= 0 Bleaching Watch           —   0 < HotSpot < 1 Bleaching Warning         —   1 <= HotSpot 0 < DHW < 4 Bleaching Alert Level 1   —   1 <= HotSpot 4 <= DHW < 8 Bleaching Alert Level 2   —   1 <= HotSpot 8 <= DHW < 12 Bleaching Alert Level 3   —   1 <= HotSpot 12 <= DHW < 16 Bleaching Alert Level 4   —   1 <= HotSpot 16 <= DHW < 20 Bleaching Alert Level 5   —   1 <= HotSpot 20 <= DHW See vignette details.","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_baa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate BAA — calculate_baa","text":"","code":"calculate_baa(hotspots, dhw)"},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_baa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate BAA — calculate_baa","text":"hotspots hotspots dhw dhw","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_baa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate BAA — calculate_baa","text":"degree heating weeks (terra::rast format)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_daily_climatology.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Daily Climatology — calculate_daily_climatology","title":"Calculate Daily Climatology — calculate_daily_climatology","text":"Function calculate daily climatology See vignette details","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_daily_climatology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Daily Climatology — calculate_daily_climatology","text":"","code":"calculate_daily_climatology(sst_file, mm)"},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_daily_climatology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Daily Climatology — calculate_daily_climatology","text":"sst_file sst file mm monthly maximums","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_daily_climatology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Daily Climatology — calculate_daily_climatology","text":"climatology (terra::rast format)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_dhw.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate DHW — calculate_dhw","title":"Calculate DHW — calculate_dhw","text":"Function calculate hotspots function computes Degree Heating Weeks (DHW) metric, accumulates heat stress specified rolling window (defaulting 84 days). function operates applying rolling sum input hotspots raster data. pixel, daily hotspot values greater equal 1, summed rolling window divided 7 calculate weekly averages using zoo::rollapply. function returns raster object calculated DHW values, represent accumulated heat stress. See vignette details","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_dhw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate DHW — calculate_dhw","text":"","code":"calculate_dhw(hotspots, window = 84)"},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_dhw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate DHW — calculate_dhw","text":"hotspots hotspots window number days sum hotspots, default = 84 (12 weeks)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_dhw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate DHW — calculate_dhw","text":"degree heating weeks (terra::rast format)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_hotspots.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate hotspots — calculate_hotspots","title":"Calculate hotspots — calculate_hotspots","text":"Function calculate hotspots See vignette details","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_hotspots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate hotspots — calculate_hotspots","text":"","code":"calculate_hotspots(mmm, sst_file)"},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_hotspots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate hotspots — calculate_hotspots","text":"mmm maximum monthly mean sst_file sst file","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_hotspots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate hotspots — calculate_hotspots","text":"daily hotpsots (terra::rast format)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_maximum_monthly_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Maximum Monthly Mean (MMM) — calculate_maximum_monthly_mean","title":"Create Maximum Monthly Mean (MMM) — calculate_maximum_monthly_mean","text":"Function calculate maximum monthly mean datasets","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_maximum_monthly_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Maximum Monthly Mean (MMM) — calculate_maximum_monthly_mean","text":"","code":"calculate_maximum_monthly_mean(mm)"},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_maximum_monthly_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Maximum Monthly Mean (MMM) — calculate_maximum_monthly_mean","text":"mm monthly mean","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_maximum_monthly_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Maximum Monthly Mean (MMM) — calculate_maximum_monthly_mean","text":"output list (see details)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_monthly_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Monthly Mean (MMM) — calculate_monthly_mean","title":"Create Monthly Mean (MMM) — calculate_monthly_mean","text":"Function calculate maximum monthly mean trends. See vignette details.","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_monthly_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Monthly Mean (MMM) — calculate_monthly_mean","text":"","code":"calculate_monthly_mean(sst_file, midpoint = 1988.2857, return = \"predict\")"},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_monthly_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Monthly Mean (MMM) — calculate_monthly_mean","text":"sst_file SpatRaster SST data. midpoint recentered date, see vignette return Type output: \"predict\", \"slope\", \"intercept\".","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/calculate_monthly_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Monthly Mean (MMM) — calculate_monthly_mean","text":"Climatology terra::rast object.","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/check_missing_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Check missing dates — check_missing_dates","title":"Check missing dates — check_missing_dates","text":"Function check missing files date folder","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/check_missing_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check missing dates — check_missing_dates","text":"","code":"check_missing_dates(folder, start_date, end_date)"},{"path":"https://marine-ecologist.github.io/dhw/reference/check_missing_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check missing dates — check_missing_dates","text":"folder input folder start_date start date (YYYY-MM-DD) end_date end date (YYYY-MM-DD)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/check_missing_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check missing dates — check_missing_dates","text":"Vector filenames missing \"missing dates\"","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/check_missing_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check missing dates — check_missing_dates","text":"","code":"if (FALSE) { # \\dontrun{  check_missing_dates(start_date=\"1981-09-01\", end_date=\"2024-04-30\",  \"/Volumes/Extreme_SSD/dhw/OISST/gbr\") check_missing_dates(start_date=\"1981-09-01\", end_date=\"2024-04-30\",  \"/Volumes/Extreme_SSD/dhw/OISST/global\" ) check_missing_dates(start_date=\"1985-06-01\", end_date=\"2024-04-30\",  \"/Volumes/Extreme_SSD/dhw/CRW/global/CRW_SST\") check_missing_dates(start_date=\"1985-06-01\", end_date=\"2024-04-30\",  \"/Volumes/Extreme_SSD/dhw/CRW/global/CRW_SSTA\")  } # }"},{"path":"https://marine-ecologist.github.io/dhw/reference/create_climatology.html","id":null,"dir":"Reference","previous_headings":"","what":"Create climatology — create_climatology","title":"Create climatology — create_climatology","text":"Function calculate climatology datasets See vignette details outputs: output$sst output$anomalies output$mm output$mmm output$dailyclimatology output$hs output$dhw","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/create_climatology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create climatology — create_climatology","text":"","code":"create_climatology(sst_file, window = 84, quiet = FALSE, baa = FALSE)"},{"path":"https://marine-ecologist.github.io/dhw/reference/create_climatology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create climatology — create_climatology","text":"sst_file input window number days DHW sum (12 weeks = 84 days default) quiet verbose - update messages? baa return baa? TRUE/FALSE","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/create_climatology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create climatology — create_climatology","text":"output list (see details)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/create_climatology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create climatology — create_climatology","text":"","code":"if (FALSE) { # \\dontrun{ output <- create_climatology(\"crw.nc\") } # }"},{"path":"https://marine-ecologist.github.io/dhw/reference/download_CoralTemp.html","id":null,"dir":"Reference","previous_headings":"","what":"Download CoralTemp data — download_CoralTemp","title":"Download CoralTemp data — download_CoralTemp","text":"Downloads saves NOAA CoralTemp NetCDF files specified start end dates. CoralTemp dataset provides daily global 5km Sea Surface Temperature (SST) data, including anomalies degree heating weeks, spanning January 1, 1985. URL links current 4th Jan: https://www.ncei.noaa.gov/thredds-ocean/catalog/crw/5km/v3.1/nc/v1.0/daily/sst/1985/catalog.html?dataset=crw/5km/v3.1/nc/v1.0/daily/sst/1985/coraltemp_v3.1_19850101.nc https://www.ncei.noaa.gov/thredds-ocean/fileServer/crw/5km/v3.1/nc/v1.0/daily/sst/1985/coraltemp_v3.1_19850101.nc See: https://coralreefwatch.noaa.gov/product/5km/index_5km_sst.php","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_CoralTemp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download CoralTemp data — download_CoralTemp","text":"","code":"download_CoralTemp(   url = \"https://www.ncei.noaa.gov/thredds-ocean/fileServer/crw/5km/v3.1/nc/v1.0/daily/\",   start_date,   end_date,   dest_dir,   variable = \"sst\",   mc.cores = 1 )"},{"path":"https://marine-ecologist.github.io/dhw/reference/download_CoralTemp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download CoralTemp data — download_CoralTemp","text":"url NOAA THREDDS server URL. Default CoralTemp data server. start_date Start date \"YYYY-MM-DD\" format. end_date End date \"YYYY-MM-DD\" format. dest_dir Directory NetCDF files saved. variable Data type: 'sst', 'dhw', 'ssta', 'hs'. mc.cores Number cores parallel downloads.","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_CoralTemp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download CoralTemp data — download_CoralTemp","text":"Saves NetCDF files specified destination folder.","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_CoralTemp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download CoralTemp data — download_CoralTemp","text":"","code":"if (FALSE) { # \\dontrun{  download_CoralTemp(url = \"https://www.ncei.noaa.gov/thredds-ocean/fileServer/crw/5km/v3.1/nc/v1.0/daily/\",                    start_date = \"1990-01-01\",                    end_date = \"1990-01-02\",                    dest_dir = \"/Volumes/Extreme_SSD/dhw/CRW/2024/\",                    variable = \"sst\",                    mc.cores = 1) } # }"},{"path":"https://marine-ecologist.github.io/dhw/reference/download_ERA5.html","id":null,"dir":"Reference","previous_headings":"","what":"Download ERA5 data — download_ERA5","title":"Download ERA5 data — download_ERA5","text":"Function download save NetCDF files OISST download_ERA5() function download ERA5 SST data Notes: ERA5 fifth generation ECMWF atmospheric reanalysis global climate covering period January 1940 present.","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_ERA5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download ERA5 data — download_ERA5","text":"","code":"download_ERA5(   start_year = 1981,   end_year = 2022,   ecmwfr_key,   timeout,   dest_dir )"},{"path":"https://marine-ecologist.github.io/dhw/reference/download_ERA5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download ERA5 data — download_ERA5","text":"start_year start year end_year end year ecmwfr_key required ecmfr key, see notes timeout set timeout downloading (minutes) dest_dir save file location","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_ERA5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download ERA5 data — download_ERA5","text":"downloaded nc files specified location","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_ERA5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download ERA5 data — download_ERA5","text":"","code":"if (FALSE) { # \\dontrun{ download_ERA5(1990, 2020, key, 60, \"/users/era5/\") } # }"},{"path":"https://marine-ecologist.github.io/dhw/reference/download_OISST.html","id":null,"dir":"Reference","previous_headings":"","what":"Download OISST data — download_OISST","title":"Download OISST data — download_OISST","text":"Function download save NetCDF files CoralTemp download_OISST() function download OISST v2.1 number cores set >1, function uses mclapply parallel download datasets, else 1 = single downloads. Notes: NOAA 1/4° Daily Optimum Interpolation Sea Surface Temperature (OISST) long term Climate Data Record incorporates observations different platforms (satellites, ships, buoys Argo floats) regular global grid. dataset interpolated fill gaps grid create spatially complete map sea surface temperature. Satellite ship observations referenced buoys compensate platform differences sensor biases.","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_OISST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download OISST data — download_OISST","text":"","code":"download_OISST(   url =     \"https://www.ncei.noaa.gov/data/sea-surface-temperature-optimum-interpolation/v2.1/access/avhrr/\",   start_date,   end_date,   dest_dir,   mc.cores = 1 )"},{"path":"https://marine-ecologist.github.io/dhw/reference/download_OISST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download OISST data — download_OISST","text":"url one NOAA thredds url start_date end year end_date end year dest_dir save file location mc.cores set number cores","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_OISST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download OISST data — download_OISST","text":"downloaded nc files specified location","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_OISST.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download OISST data — download_OISST","text":"","code":"if (FALSE) { # \\dontrun{  download_OISST(url = \"https://www.ncei.noaa.gov/data/sea-surface-temperature-optimum-interpolation/v2.1/access/avhrr/\",   start_date = \"1990-01-01\",   end_date = \"1990-01-02\",   dest_dir = \"/Volumes/Extreme_SSD/dhw/OISST/2024/\",   mc.cores = 1)  } # }"},{"path":"https://marine-ecologist.github.io/dhw/reference/download_gbr_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Download GBR spatial data — download_gbr_spatial","title":"Download GBR spatial data — download_gbr_spatial","text":"function download GBR shape files (14.1mb size, shp file format) via eReefs Notes: several versions GBR reefs shape file. version downloaded via eAtlas Website includes reefs Torres Strait. Default CRS GDA94 (EPSG:4283)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_gbr_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download GBR spatial data — download_gbr_spatial","text":"","code":"download_gbr_spatial(crs = \"EPSG:4283\", return = \"base\")"},{"path":"https://marine-ecologist.github.io/dhw/reference/download_gbr_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download GBR spatial data — download_gbr_spatial","text":"crs change CRS needed (EPSG:4283 default) return One \"combined\", \"hull\", \"base\"","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_gbr_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download GBR spatial data — download_gbr_spatial","text":"Simple feature collection 9612 features 35 fields","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_gbr_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download GBR spatial data — download_gbr_spatial","text":"","code":"if (FALSE) { # \\dontrun{ eAtlas <- download_gbr_spatial(crs=4326) } # }"},{"path":"https://marine-ecologist.github.io/dhw/reference/download_nc_file_CRW.html","id":null,"dir":"Reference","previous_headings":"","what":"Download nc files — download_nc_file_CRW","title":"Download nc files — download_nc_file_CRW","text":"Function download save NetCDF files coraltemp_v3.1_19850101.nc ct5km_ssta_v3.1_19850101.nc ct5km_dhw_v3.1_19850325.nc ct5km_baa_v3.1_19850325.nc ct5km_hs_v3.1_19850101.nc","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_nc_file_CRW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download nc files — download_nc_file_CRW","text":"","code":"download_nc_file_CRW(date, base_url, dest_dir)"},{"path":"https://marine-ecologist.github.io/dhw/reference/download_nc_file_CRW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download nc files — download_nc_file_CRW","text":"date date \"\" base_url one NOAA thredds url dest_dir destination dir","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_nc_file_CRW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download nc files — download_nc_file_CRW","text":"downloaded nc files specified location","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_nc_file_CRW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download nc files — download_nc_file_CRW","text":"","code":"if (FALSE) { # \\dontrun{ download_nc_file(date = 20240101,   base_url = \"https://www.ncei.noaa.gov/data/sea-surface-temperature-optimum-interpolation/v2.1/access/avhrr/\",   variable = \"ssta\",   dest_dir = \"/Users/rof011/Downloads\") } # }"},{"path":"https://marine-ecologist.github.io/dhw/reference/download_nc_file_OISST.html","id":null,"dir":"Reference","previous_headings":"","what":"Download nc files — download_nc_file_OISST","title":"Download nc files — download_nc_file_OISST","text":"Function download save NetCDF files","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_nc_file_OISST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download nc files — download_nc_file_OISST","text":"","code":"download_nc_file_OISST(date, base_url, dest_dir)"},{"path":"https://marine-ecologist.github.io/dhw/reference/download_nc_file_OISST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download nc files — download_nc_file_OISST","text":"date date \"\" base_url one NOAA thredds url dest_dir destination dir","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_nc_file_OISST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download nc files — download_nc_file_OISST","text":"downloaded nc files specified location","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/download_nc_file_OISST.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download nc files — download_nc_file_OISST","text":"","code":"if (FALSE) { # \\dontrun{ download_nc_file(date = 20240101, base_url = \"https://www.ncei.noaa.gov/data/sea-surface-temperature-optimum-interpolation/v2.1/access/avhrr/\", dest_dir = \"/Users/rof011/Downloads\") } # }"},{"path":"https://marine-ecologist.github.io/dhw/reference/extract_reefs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract reef — extract_reefs","title":"Extract reef — extract_reefs","text":"Function extract SST data shapefile overlay. Processing large daily datasets output sf may result significant lag due tidyverse pivot_longer approach (.e. 365 days results sf 1357104 rows). Alternative approach implemented earlier (looping time periods) still slow - refined later. See vignette details","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/extract_reefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract reef — extract_reefs","text":"","code":"extract_reefs(   input,   shpfile,   output = \"sf\",   fun = \"mean\",   weights = \"area\",   timeseries = \"daily\",   varname = \"sst\" )"},{"path":"https://marine-ecologist.github.io/dhw/reference/extract_reefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract reef — extract_reefs","text":"input Input raster data. shpfile Location shapefile mask. output Output format, \"sf\" (default) \"df\". fun see ?exact_extract details weights see ?exact_extract details timeseries time series varname varname","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/extract_reefs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract reef — extract_reefs","text":"Shapefile sf object SST details data.frame (see details).","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/extract_reefs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract reef — extract_reefs","text":"","code":"if (FALSE) { # \\dontrun{   #### annual data ecmwfr_combined <- process_ERA5(\"/Users/rof011/GBR-dhw/datasets/era5/\") gbr_era5_annual_max <- summarise_raster(ecmwfr_combined, index = \"years\", fun = max, na.rm = TRUE) gbr_era5_sf_annual_max <- extract_reefs(gbr_era5_annual_max, gbr_files, output=\"sf\", weights=\"area\", fun=\"mean\")  ### daily data for 2024 only ecmwfr_2024 <- ecmwfr_combined[[format(terra::time(ecmwfr_combined), \"%Y\") == \"2024\"]] gbr_era5_sf_2024 <- extract_reefs(ecmwfr_2024, gbr_files, output=\"sf\", weights=\"area\", fun=\"mean\")   ### ERA5 climatology ecmwfr_combined <- process_ERA5(\"/Users/rof011/GBR-dhw/datasets/era5/\") ecmwfr_climatology <- create_climatology(ecmwfr_combined, baa=FALSE)  ###### DHW  ### maxDHW per year for era5 in rast gbr_era5_dhw_annual_max <- summarise_raster(ecmwfr_climatology$dhw, index = \"years\", fun = max, na.rm = TRUE)  ggplot() + theme_bw() +  facet_wrap(~lyr, ncol=10) +  tidyterra::geom_spatraster(data=gbr_era5_dhw_annual_max) +  scale_fill_distiller(palette=\"Reds\", direction=1)   ### annual mean reef-average maxDHW gbr_era5_dhw_mean_annual_max <- extract_reefs(gbr_era5_dhw_annual_max, gbr_files, output=\"df\", varname=\"dhw\", weights=\"area\", fun=\"mean\")  gbr_era5_dhw_mean_annual_max_summarised <- gbr_era5_dhw_mean_annual_max |>   group_by(date) |>   summarise(dhw = mean(dhw, na.rm=TRUE))   ggplot() + theme_bw() +  geom_vline(xintercept=c(\"1998\", \"2002\", \"2016\", \"2017\", \"2020\", \"2022\", \"2024\"), linewidth=2, alpha=0.2) +  geom_col(data=gbr_era5_dhw_mean_annual_max_summarised, aes(x=date, y=dhw, fill=dhw), color=\"black\", show.legend=FALSE) +  scale_fill_distiller(palette=\"Reds\", direction=1)   ###### SST  ### maxSST per year for era5 in rast gbr_era5_sst_annual_max <- summarise_raster(ecmwfr_climatology$sst, index = \"years\", fun = max, na.rm = TRUE)  ggplot() + theme_bw() +   facet_wrap(~lyr, ncol=10) +   tidyterra::geom_spatraster(data=gbr_era5_sst_annual_max) +   scale_fill_distiller(palette=\"RdBu\")   ### annual mean reef-average SST gbr_era5_SST_mean_annual_max <- extract_reefs(gbr_era5_sst_annual_max, gbr_files, output=\"df\", varname=\"sst\", weights=\"area\", fun=\"mean\")  gbr_era5_sst_mean_annual_max_summarised <- gbr_era5_SST_mean_annual_max |>   group_by(date) |>   summarise(sst = mean(sst, na.rm=TRUE)) |>   mutate(date=as.numeric(date))   ggplot() + theme_bw() +   geom_vline(xintercept=c(1998, 2002, 2016, 2017, 2020, 2022, 2024), linewidth=2, alpha=0.2) +   geom_point(data=gbr_era5_sst_mean_annual_max_summarised, aes(x=date, y=sst, fill=sst),              color=\"black\", show.legend=FALSE, shape=21) +   geom_smooth(data=gbr_era5_sst_mean_annual_max_summarised, aes(x=date, y=sst), method = \"lm\") +   scale_fill_distiller(palette=\"RdBu\", direction=-1) +   coord_cartesian(ylim = c(28,30))   ###### SSTanom  ### meanSSTanom per year for era5 in rast gbr_era5_sstanom_annual_max <- summarise_raster(ecmwfr_climatology$anomaly, index = \"years\", fun = mean, na.rm = TRUE)  ggplot() + theme_bw() +   facet_wrap(~lyr, ncol=10) +   tidyterra::geom_spatraster(data=gbr_era5_sstanom_annual_max) +   scale_fill_distiller(palette=\"RdBu\")   ### annual mean reef-average SST gbr_era5_SSTanom_mean_annual_max <- extract_reefs(gbr_era5_sstanom_annual_max, gbr_files, output=\"df\", varname=\"sstanom\", weights=\"area\", fun=\"mean\")  gbr_era5_sstanom_mean_annual_max_summarised <- gbr_era5_SSTanom_mean_annual_max |>   group_by(date) |>   summarise(sstanom = mean(sstanom, na.rm=TRUE)) |>   mutate(date=as.numeric(date))   ggplot() + theme_bw() +   geom_vline(xintercept=c(1998, 2002, 2016, 2017, 2020, 2022, 2024), linewidth=2, alpha=0.2) +   geom_line(data=gbr_era5_sstanom_mean_annual_max_summarised, aes(x=date, y=sstanom),             color=\"black\", show.legend=FALSE) +   geom_smooth(data=gbr_era5_sstanom_mean_annual_max_summarised, aes(x=date, y=sstanom), method = \"lm\", alpha=0.2) +   scale_fill_distiller(palette=\"RdBu\", direction=-1) +   geom_hline(yintercept=0, lwd=0.4) #coord_cartesian(ylim = c(28,30))   } # }"},{"path":"https://marine-ecologist.github.io/dhw/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://marine-ecologist.github.io/dhw/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/plot2.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple XY plot for terra::rast values() comparisons — plot2","title":"Simple XY plot for terra::rast values() comparisons — plot2","text":"Helper function quickly visualise values two terra::rast files base r xy plot (abline) Assumes one var per rast","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/plot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple XY plot for terra::rast values() comparisons — plot2","text":"","code":"plot2(x, y)"},{"path":"https://marine-ecologist.github.io/dhw/reference/plot2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple XY plot for terra::rast values() comparisons — plot2","text":"x terra::rast() y terra::rast(b)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/plot2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple XY plot for terra::rast values() comparisons — plot2","text":"base R plot","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/plot_mm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot mean monthly maximum for a given gridcell — plot_mm","title":"Plot mean monthly maximum for a given gridcell — plot_mm","text":"Plot mean monthly maximum given gridcell terra::rast() file input","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/plot_mm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot mean monthly maximum for a given gridcell — plot_mm","text":"","code":"plot_mm(input, lon, lat)"},{"path":"https://marine-ecologist.github.io/dhw/reference/plot_mm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot mean monthly maximum for a given gridcell — plot_mm","text":"input rast() file lon vector longitude lat vector latitude","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/plot_mm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot mean monthly maximum for a given gridcell — plot_mm","text":"ggplot baseline climatology","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/plot_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate anomalies — plot_year","title":"Calculate anomalies — plot_year","text":"Function calculate anomalies See vignette details","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/plot_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate anomalies — plot_year","text":"","code":"plot_year(sst_file, climatology)"},{"path":"https://marine-ecologist.github.io/dhw/reference/plot_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate anomalies — plot_year","text":"sst_file sst file climatology daily climatology","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/plot_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate anomalies — plot_year","text":"SST anomalies (terra::rast format)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/process_CoralTemp.html","id":null,"dir":"Reference","previous_headings":"","what":"Download GBR spatial data — process_CoralTemp","title":"Download GBR spatial data — process_CoralTemp","text":"function download GBR shape files (14.1mb size, shp file format) via eReefs Notes: several versions GBR reefs shape file. version downloaded via eAtlas Website includes reefs Torres Strait. Default CRS GDA94 (EPSG:4283)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/process_CoralTemp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download GBR spatial data — process_CoralTemp","text":"","code":"process_CoralTemp(   input,   polygon,   crop = TRUE,   mask = TRUE,   downsample = FALSE,   res = 0.1,   variable = \"sst\",   crs = \"EPSG:7844\",   combinedfilename = NULL )"},{"path":"https://marine-ecologist.github.io/dhw/reference/process_CoralTemp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download GBR spatial data — process_CoralTemp","text":"input input folder polygon polygon crop/masl crop TRUE/FALSE mask TRUE/FALSE downsample TRUE/FALSE res resolution downsamlpling variable redundant? crs change CRS needed (EPSG:4283 default) combinedfilename output file path, .rds","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/process_CoralTemp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download GBR spatial data — process_CoralTemp","text":"terra::rast","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/process_CoralTemp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download GBR spatial data — process_CoralTemp","text":"","code":"if (FALSE) { # \\dontrun{  GBR_hull <- download_gbr_spatial(return=\"hull\", crs = \"EPSG:7844\")  process_CoralTemp(input = \"/Volumes/Extreme_SSD/dhw/coraltemp\",                   polygon = GBR_hull, crs = \"EPSG:7844\",                   combinedfilename = \"/Volumes/Extreme_SSD/dhw/GBR_CoralTemp_full.rds\",                   crop=TRUE, mask=TRUE, downsample=FALSE)   rast(unwrap(\"/Volumes/Extreme_SSD/dhw/GBR_CoralTemp_full.rds\")) rast(unwrap(\"/Volumes/Extreme_SSD/dhw/GBR_CoralTemp_full.rds\"))[[1]] |> plot()  } # }  if (FALSE) { # \\dontrun{  process_CoralTemp(input = \"/Volumes/Extreme_SSD/dhw/coraltempdhw\",                   polygon = GBR_hull, crs = \"EPSG:7844\",                   combinedfilename = \"/Volumes/Extreme_SSD/dhw/GBR_CoralTempDHW_full.rds\",                   crop=TRUE, mask=TRUE, downsample=FALSE)   rast(unwrap(\"/Volumes/Extreme_SSD/dhw/GBR_CoralTempDHW_full.rds\"))[[1]] |> plot() rast(unwrap(\"/Volumes/Extreme_SSD/dhw/GBR_CoralTempDHW_full.rds\"))  } # }"},{"path":"https://marine-ecologist.github.io/dhw/reference/process_ERA5.html","id":null,"dir":"Reference","previous_headings":"","what":"Process ERA5 NetCDF Files — process_ERA5","title":"Process ERA5 NetCDF Files — process_ERA5","text":"Function extract combine SST data NetCDF files specified folder. See vignette details.","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/process_ERA5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process ERA5 NetCDF Files — process_ERA5","text":"","code":"process_ERA5(   input,   polygon,   crop = TRUE,   mask = TRUE,   downsample = FALSE,   res = 0.1,   crs = \"EPSG:7844\",   combinedfilename = NULL,   units = \"celsius\" )"},{"path":"https://marine-ecologist.github.io/dhw/reference/process_ERA5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process ERA5 NetCDF Files — process_ERA5","text":"input Folder containing NetCDF (.nc) files. polygon polygon crop/masl crop TRUE/FALSE mask TRUE/FALSE downsample TRUE/FALSE res resolution downsamlpling crs change CRS needed (EPSG:4283 default) combinedfilename output file path, .rds units Units temperature: one \"celsius\" \"kelvin\". Default \"celsius\". variable redundant?","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/process_ERA5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process ERA5 NetCDF Files — process_ERA5","text":"combined SpatRaster object ERA5 format.","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/process_ERA5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process ERA5 NetCDF Files — process_ERA5","text":"","code":"if (FALSE) { # \\dontrun{ folder <- \"/Users/rof011/GBR-dhw/datasets/era5/\" process_ERA5(folder, units = \"celsius\") } # }"},{"path":"https://marine-ecologist.github.io/dhw/reference/process_OISST.html","id":null,"dir":"Reference","previous_headings":"","what":"Download GBR spatial data — process_OISST","title":"Download GBR spatial data — process_OISST","text":"function download GBR shape files (14.1mb size, shp file format) via eReefs Notes: several versions GBR reefs shape file. version downloaded via eAtlas Website includes reefs Torres Strait. Default CRS GDA94 (EPSG:4283)","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/process_OISST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download GBR spatial data — process_OISST","text":"","code":"process_OISST(   input,   polygon,   crop = TRUE,   mask = TRUE,   downsample = FALSE,   res = 0.1,   variable = \"sst\",   crs = \"EPSG:7844\",   combinedfilename = NULL )"},{"path":"https://marine-ecologist.github.io/dhw/reference/process_OISST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download GBR spatial data — process_OISST","text":"input input folder polygon polygon crop/masl crop TRUE/FALSE mask TRUE/FALSE downsample TRUE/FALSE res resolution downsamlpling variable redundant? crs change CRS needed (EPSG:4283 default) combinedfilename output file path, .rds","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/process_OISST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download GBR spatial data — process_OISST","text":"terra::rast","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/process_OISST.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download GBR spatial data — process_OISST","text":"","code":"if (FALSE) { # \\dontrun{  GBR_hull <- download_gbr_spatial(return=\"hull\", crs = \"EPSG:7844\")  process_OISST(input = \"/Volumes/Extreme_SSD/dhw/global\",                   polygon = GBR_hull, crs = \"EPSG:7844\",                   combinedfilename = \"/Volumes/Extreme_SSD/dhw/GBR_OISST_full.rds\",                   crop=TRUE, mask=TRUE, downsample=FALSE)   rast(unwrap(\"/Volumes/Extreme_SSD/dhw/GBR_CoralTemp_full.rds\")) rast(unwrap(\"/Volumes/Extreme_SSD/dhw/GBR_CoralTemp_full.rds\"))[[1]] |> plot()  } # }  if (FALSE) { # \\dontrun{  process_CoralTemp(input = \"/Volumes/Extreme_SSD/dhw/coraltempdhw\",                   polygon = GBR_hull, crs = \"EPSG:7844\",                   combinedfilename = \"/Volumes/Extreme_SSD/dhw/GBR_CoralTempDHW_full.rds\",                   crop=TRUE, mask=TRUE, downsample=FALSE)   rast(unwrap(\"/Volumes/Extreme_SSD/dhw/GBR_CoralTempDHW_full.rds\"))[[1]] |> plot() rast(unwrap(\"/Volumes/Extreme_SSD/dhw/GBR_CoralTempDHW_full.rds\"))  } # }"},{"path":"https://marine-ecologist.github.io/dhw/reference/summarise_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise rasters to year — summarise_raster","title":"Summarise rasters to year — summarise_raster","text":"wrapper tapp() Input rast requires time format (.Date()) Options index time periods: \"years\", \"months\", \"yearmonths\", \"dekads\", \"yeardekads\", \"weeks\" (ISO 8601 week number, see tapp() Details), \"yearweeks\", \"days\", \"doy\" (day year), \"7days\" (seven-day periods starting Jan 1 year), \"10days\", \"15days\" Fun min, max, mean etc.","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/summarise_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise rasters to year — summarise_raster","text":"","code":"summarise_raster(input, index, fun, cores = 1, na.rm = TRUE, overwrite)"},{"path":"https://marine-ecologist.github.io/dhw/reference/summarise_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise rasters to year — summarise_raster","text":"input Input raster data. index options time, see fun summarise function see ) cores number cores, see tapp() details na.rm see tapp() details overwrite logical. TRUE, filename overwritten","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/summarise_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise rasters to year — summarise_raster","text":"summarise raster","code":""},{"path":"https://marine-ecologist.github.io/dhw/reference/summarise_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise rasters to year — summarise_raster","text":"","code":"if (FALSE) { # \\dontrun{ noaa_dhw_file <- \"https://pae-paha.pacioos.hawaii.edu/erddap/griddap/dhw_5km.nc?CRW_SST%5B(2024-12-20T12:00:00Z):1:(2024-12-25T12:00:00Z)%5D%5B(-8.9):1:(-25)%5D%5B(141):1:(153.5)%5D\" noaa_dhw_raster <- rast(noaa_dhw_file) |> flip() |> project(\"EPSG:4283\") tmp <- summarise_raster(noaa_dhw_raster, index=\"years\", fun=\"min\") tmp } # }"}]
